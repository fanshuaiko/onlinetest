<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanshuaiko.backage.dao.ScoreDetailDao">
    <resultMap id="BaseResultMap" type="com.fanshuaiko.backage.entity.ScoreDetail">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="test_no" jdbcType="BIGINT" property="testNo"/>
        <result column="question_no" jdbcType="BIGINT" property="questionNo"/>
        <result column="student_score" jdbcType="INTEGER" property="studentScore"/>
        <result column="question_score" jdbcType="INTEGER" property="questionScore"/>
        <result column="question_type" jdbcType="CHAR" property="questionType"/>
        <result column="flag" jdbcType="CHAR" property="flag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fanshuaiko.backage.entity.ScoreDetail">
        <result column="student_answer" jdbcType="LONGVARCHAR" property="studentAnswer"/>
    </resultMap>
    <sql id="Blob_Column_List">
    student_answer
  </sql>
    <insert id="insert" parameterType="com.fanshuaiko.backage.entity.ScoreDetail">
    insert into score_detail (id, student_no, test_no, 
      question_no, student_score, question_type, 
      flag, create_time, student_answer
      )
    values (#{id,jdbcType=BIGINT}, #{studentNo,jdbcType=VARCHAR}, #{testNo,jdbcType=BIGINT}, 
      #{questionNo,jdbcType=BIGINT}, #{studentScore,jdbcType=INTEGER}, #{questionType,jdbcType=CHAR},
      #{flag,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{studentAnswer,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.fanshuaiko.backage.entity.ScoreDetail">
        insert into score_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentNo != null">
                student_no,
            </if>
            <if test="testNo != null">
                test_no,
            </if>
            <if test="questionNo != null">
                question_no,
            </if>
            <if test="studentScore != null">
                student_score,
            </if>
            <if test="questionType != null">
                question_type,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="studentAnswer != null">
                student_answer,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="studentNo != null">
                #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="testNo != null">
                #{testNo,jdbcType=BIGINT},
            </if>
            <if test="questionNo != null">
                #{questionNo,jdbcType=BIGINT},
            </if>
            <if test="studentScore != null">
                #{studentScore,jdbcType=INTEGER},
            </if>
            <if test="questionType != null">
                #{questionType,jdbcType=CHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="studentAnswer != null">
                #{studentAnswer,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <select id="queryScoreDetail" parameterType="java.lang.Long"
            resultType="com.fanshuaiko.backage.entity.VO.ScoreDetailReturnVo">
        select
        sd.id as id,
        t.name as testName,
        s.question as questionName,
        sd.student_answer as studentAnswer,
        s.answer as answer,
        tq.score as questionScore,
        sd.question_type as questionType,
        sd.flag as flag
        from score_detail sd
        left join test t on t.id = #{testNo}
        left join subjective s on s.id = sd.question_no
        left join test_question tq on tq.question_no = s.id
        where sd.test_no = #{testNo} and sd.question_type = '4' and sd.flag = '0' limit 1
    </select>

    <update id="updateStudentScoreById">
        update score_detail
        set student_score = #{score}
        where id = #{id}
    </update>

    <select id="queryAllChoiceByTestNo" resultMap="BaseResultMap">
        select
        id,
        student_no,
        question_no,
        student_score,
        question_score,
        student_answer as studentAnswer
        from score_detail
        where test_no = #{test_no} and question_type != '4' and flag = '0'
    </select>

    <update id="batchUpdateStudentScore" parameterType="java.util.List">
        update score_detail
        set
        flag = '1',
        student_score =
        <foreach collection="scoreDetails" item="item" index="index" separator=" " open="case ID" close="end">
            when #{item.id} then #{item.studentScore}
        </foreach>
        where id in
        <foreach collection="scoreDetails" index="index" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>
</mapper>