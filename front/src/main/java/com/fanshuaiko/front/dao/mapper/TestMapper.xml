<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanshuaiko.front.dao.TestDao">
    <resultMap id="BaseResultMap" type="com.fanshuaiko.front.entity.Test">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="teacher_no" jdbcType="VARCHAR" property="teacherNo"/>
        <result column="total_score" jdbcType="VARCHAR" property="totalScore"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, course_id, teacher_no, total_score, status, start_time, end_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.fanshuaiko.front.entity.Test">
    insert into test (id, name, course_id, 
      teacher_no, total_score, status, 
      start_time, end_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{teacherNo,jdbcType=VARCHAR}, #{totalScore,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.fanshuaiko.front.entity.Test">
        insert into test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="teacherNo != null">
                teacher_no,
            </if>
            <if test="totalScore != null">
                total_score,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherNo != null">
                #{teacherNo,jdbcType=VARCHAR},
            </if>
            <if test="totalScore != null">
                #{totalScore,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fanshuaiko.front.entity.Test">
        update test
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherNo != null">
                teacher_no = #{teacherNo,jdbcType=VARCHAR},
            </if>
            <if test="totalScore != null">
                total_score = #{totalScore,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fanshuaiko.front.entity.Test">
    update test
    set name = #{name,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      teacher_no = #{teacherNo,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      start_time = #{startTime},
      end_time = #{endTime}
    where id = #{id,jdbcType=BIGINT}
  </update>

<select id="queryTestByStudentNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
  	t.id,t.name,t.course_id,t.teacher_no,t.total_score,t.status,t.start_time,t.end_time,t.test_time
    from test t
    left join test_class tc on tc.test_no = t.id
    left join student s on s.class_no = tc.class_no
    where s.student_no = #{studentNo}
</select>

<select id="getSubjective" resultType="com.fanshuaiko.front.entity.Question" parameterType="java.lang.Long">
    select
    s.id as id,
    s.question as question,
    s.course_name as courseName,
    s.type as type,
    tq.score as questionScore
    from subjective s
    left join test_question tq on tq.question_no = s.id
    where tq.test_no = #{testNo}
</select>

    <select id="getChoice" resultType="com.fanshuaiko.front.entity.Question" parameterType="java.lang.Long">
    select
    c.id as id,
    c.question as question,
    c.choice_a as choiceA,
    c.choice_b as choiceB,
    c.choice_c as choiceC,
    c.choice_d as choiceD,
    c.course_name as courseName,
    c.type as type,
    tq.score as questionScore
    from choice c
    left join test_question tq on tq.question_no = c.id
    where tq.test_no = #{testNo}
</select>


</mapper>